{
	"info": {
		"_postman_id": "05881611-eaef-4a2d-bfec-11ffdaf1667c",
		"name": "Gestion de Proyectos API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "40264331"
	},
	"item": [
		{
			"name": "Alumno",
			"item": [
				{
					"name": "GET All alumnos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Debe devolver el código de estado 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Debe devolver un array de alumnos\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.an('array');\r",
									"});\r",
									"\r",
									"pm.test(\"Debe retornar mensaje de error si no hay alumnos\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    if (jsonData.message === 'No hay alumnos registrados') {\r",
									"        pm.expect(jsonData.message).to.eql('No hay alumnos registrados');\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/api/alumnos",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"alumnos"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET Alumno/{id}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Debe devolver el código de estado 200 cuando el alumno es encontrado\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Debe retornar mensaje de error si no hay alumnos\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    if (jsonData.message === 'No hay alumnos registrados') {\r",
									"        pm.expect(jsonData.message).to.eql('No hay alumnos registrados');\r",
									"    }\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/api/alumnos/5",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"alumnos",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Alumno",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Debe devolver el código de estado 201 cuando el alumno es creado con éxito\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Debe devolver código 422 si los datos son inválidos\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    if (jsonData.message === 'Los datos proporcionados no son válidos.') {\r",
									"        pm.response.to.have.status(422);\r",
									"    }\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Jose\",\r\n    \"apellido\": \"Pérez\",\r\n    \"email\": \"jose.perez@example.com\",\r\n    \"curso\": \"3º\",\r\n    \"dni\": \"1234568A\",\r\n    \"especialidad_id\": 8\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/api/alumnos",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"alumnos"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Alumno/{id}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Debe devolver el código de estado 200 cuando el alumno es actualizado con éxito\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Nuevo Nombre\",\r\n    \"apellido\": \"Nuevo Apellido\",\r\n    \"email\": \"nuevoemail@example.com\",\r\n    \"curso\": \"5º\",\r\n    \"dni\": \"1887143N\",\r\n    \"especialidad_id\": 10\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/api/alumnos/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"alumnos",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Alumno/{id}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Debe devolver el código de estado 200 cuando el alumno es eliminado\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/api/alumnos/9",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"alumnos",
								"9"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET BelongsToManyProyectos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Debe devolver el código de estado 200 cuando el alumno tiene proyectos\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Debe devolver una lista de proyectos\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.proyectos).to.be.an('array');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/api/alumnos/5/proyectos",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"alumnos",
								"5",
								"proyectos"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Profesor",
			"item": [
				{
					"name": "Get All Profesor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Estado 200 OK y respuesta JSON\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/api/profesores",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"profesores"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST Profesor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Estado 201 OK y respuesta JSON\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Debe incluir el mensaje de éxito y los datos del profesor\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('message').that.equals('Profesor creado con éxito');\r",
									"    pm.expect(jsonData).to.have.property('profesor').that.is.an('object');\r",
									"\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Juan\",\r\n    \"apellido\": \"Gonzalez\",\r\n    \"email\": \"juan.gonzalez@example.com\",\r\n    \"dni\": \"1905562A\",\r\n    \"especialidad\": \"Ingeniería Informática\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/api/profesores",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"profesores"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT Profesor/{id}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Estado 200 OK y respuesta JSON\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Debe incluir el mensaje de éxito y los datos actualizados del profesor\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('message').that.equals('Profesor actualizado con éxito');\r",
									"    pm.expect(jsonData).to.have.property('profesor').that.is.an('object');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Nuevo NombreProfesor\",\r\n    \"apellido\": \"Nuevo Apellido\",\r\n    \"email\": \"nuevoemail@example.com\",\r\n    \"dni\": \"8901550M\",\r\n    \"especialidad\": \"Psicología\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/api/profesores/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"profesores",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Profesor/{id}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Estado 200 OK y mensaje de éxito\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Debe incluir el mensaje de eliminación exitosa\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('message').that.equals('Profesor eliminado con éxito');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/api/profesores/7",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"profesores",
								"7"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Proyecto",
			"item": [
				{
					"name": "POST Proyecto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Estado 201 OK y respuesta JSON\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Debe incluir el mensaje de éxito y los datos del proyecto\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('message').that.equals('Proyecto creado con éxito');\r",
									"    pm.expect(jsonData).to.have.property('proyecto').that.is.an('object');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"titulo\": \"Mi Proyecto Prueba\",\r\n    \"descripcion\": \"Descripción corta del proyecto\",\r\n    \"tipo_proyecto_id\": 3,\r\n    \"fecha_inicio\": \"2025-01-01\",\r\n    \"fecha_limite\": \"2025-12-31\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/api/proyectos",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"proyectos"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET hasOneCalificacionFinal",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Estado 200 OK y respuesta JSON\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Debe retornar la calificación final del proyecto\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.an('object');\r",
									"    pm.expect(jsonData).to.have.property('promedio');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/api/proyectos/4/calificacion-final",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"proyectos",
								"4",
								"calificacion-final"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get hasManyEvaluacion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Estado 200 OK y respuesta JSON\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/api/proyectos/3/evaluaciones",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"proyectos",
								"3",
								"evaluaciones"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET All Proyectos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Estado 200 OK y respuesta JSON\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/api/proyectos",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"proyectos"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Especialidad",
			"item": [
				{
					"name": "GET All Especialidad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Estado 200 OK y respuesta JSON\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/api/especialidades",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"especialidades"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET hasManyThroughProyectos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Estado 200 OK y respuesta JSON\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Debe retornar proyectos de la especialidad\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('especialidad').that.is.a('string');\r",
									"    pm.expect(jsonData).to.have.property('proyectos').that.is.an('array').that.is.not.empty;\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/api/especialidades/2/proyectos",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"especialidades",
								"2",
								"proyectos"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET hasManyAlumnos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Estado 200 OK y respuesta JSON\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Debe retornar alumnos de la especialidad\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('especialidad').that.is.a('string');\r",
									"    pm.expect(jsonData).to.have.property('alumnos').that.is.an('array').that.is.not.empty;\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/api/especialidades/2/alumnos",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"especialidades",
								"2",
								"alumnos"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Supervisión",
			"item": [
				{
					"name": "GET All Superviciones",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Estado 200 OK y respuesta JSON\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/api/supervisiones",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"api",
								"supervisiones"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}